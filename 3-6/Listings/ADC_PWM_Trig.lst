C51 COMPILER V9.00   ADC_PWM_TRIG                                                          03/06/2017 18:06:47 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE ADC_PWM_TRIG
OBJECT MODULE PLACED IN .\Objects\ADC_PWM_Trig.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE module\ADC_PWM_Trig.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include) DEFINE(
                    -FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Listings\ADC_PWM_Trig.lst) TABS(2) OBJECT(.\Objects\ADC_PWM_Trig.obj)

line level    source

   1          
   2          
   3          
   4          
   5          void INT1_ISR_init(void)
   6          {
   7   1      /*-------------------------------------------------
   8   1        ADC trig initial setting
   9   1        Please modify #if value to open diffent type
  10   1      --------------------------------------------------*/
  11   1      #if 1
  12   1      // By PWM falling edge
  13   1          PWM0_P12_OUTPUT_ENABLE;       
*** ERROR C202 IN LINE 13 OF MODULE\ADC_PWM_TRIG.C: 'PWM0_P12_OUTPUT_ENABLE': undefined identifier
  14   1          Enable_ADC_AIN0;                            // Enable AIN0 P1.7 as ADC input
*** ERROR C202 IN LINE 14 OF MODULE\ADC_PWM_TRIG.C: 'Enable_ADC_AIN0': undefined identifier
  15   1          PWM0_FALLINGEDGE_TRIG_ADC;  
*** ERROR C202 IN LINE 15 OF MODULE\ADC_PWM_TRIG.C: 'PWM0_FALLINGEDGE_TRIG_ADC': undefined identifier
  16   1      #endif    
  17   1      #if 0
              // By PWM rising edge
                  PWM0_P12_OUTPUT_ENABLE;       
                  Enable_ADC_AIN0;                            // Enable AIN0 P1.7 as ADC input
                  PWM0_RISINGEDGE_TRIG_ADC;
              #endif    
  23   1      #if 0
              // By PWM central point
                  PWM0_P12_OUTPUT_ENABLE;       
                  Enable_ADC_AIN0;                            // Enable AIN0 P1.7 as ADC input
                  PWM_CENTER_TYPE;
                  PWM0_CENTRAL_TRIG_ADC;  
              #endif  
  30   1      #if 0
              // By PWM end point
                  PWM0_P12_OUTPUT_ENABLE;       
                  Enable_ADC_AIN0;                            // Enable AIN0 P1.7 as ADC input
                  PWM_CENTER_TYPE;
                  PWM0_END_TRIG_ADC;
              #endif  
  37   1        
  38   1      // Setting PWM value
  39   1          PWMPH = 0x07;                               //Setting PWM value          
*** ERROR C202 IN LINE 39 OF MODULE\ADC_PWM_TRIG.C: 'PWMPH': undefined identifier
  40   1          PWMPL = 0xFF;
*** ERROR C202 IN LINE 40 OF MODULE\ADC_PWM_TRIG.C: 'PWMPL': undefined identifier
  41   1          PWM0H = 0x02;
*** ERROR C202 IN LINE 41 OF MODULE\ADC_PWM_TRIG.C: 'PWM0H': undefined identifier
  42   1          PWM0L = 0xFF;
*** ERROR C202 IN LINE 42 OF MODULE\ADC_PWM_TRIG.C: 'PWM0L': undefined identifier
  43   1          set_LOAD;                                   // PWM run
*** ERROR C202 IN LINE 43 OF MODULE\ADC_PWM_TRIG.C: 'set_LOAD': undefined identifier
  44   1          set_PWMRUN;
*** ERROR C202 IN LINE 44 OF MODULE\ADC_PWM_TRIG.C: 'set_PWMRUN': undefined identifier
  45   1      // Setting ADC
C51 COMPILER V9.00   ADC_PWM_TRIG                                                          03/06/2017 18:06:47 PAGE 2   

  46   1          set_EADC;                                   // Enable ADC interrupt (if use interrupt)  
*** ERROR C202 IN LINE 46 OF MODULE\ADC_PWM_TRIG.C: 'set_EADC': undefined identifier
  47   1      }
  48          
  49          /******************************************************************************
  50           * FUNCTION_PURPOSE: ADC interrupt Service Routine
  51           ******************************************************************************/
  52          void ADC_ISR (void) interrupt 11
  53          {
  54   1          clr_ADCF;                               // Clear ADC interrupt flag
*** ERROR C202 IN LINE 54 OF MODULE\ADC_PWM_TRIG.C: 'clr_ADCF': undefined identifier
  55   1          printf ("\n Value = 0x%bx",ADCRH);    // printf display will cause delay in ADC interrupt
  56   1          P30 ^= 1;                               // Check the P3.0 toggle at falling edge of PWM
  57   1      }

C51 COMPILATION COMPLETE.  0 WARNING(S),  11 ERROR(S)
