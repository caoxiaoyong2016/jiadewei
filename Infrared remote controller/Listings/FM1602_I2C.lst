C51 COMPILER V9.00   FM1602_I2C                                                            03/25/2017 17:07:57 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE FM1602_I2C
OBJECT MODULE PLACED IN .\Objects\FM1602_I2C.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE module\FM1602_I2C.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include;.\common;.
                    -\module) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\Listings\FM1602_I2C.lst) TABS(2) OBJECT(.\Objects\FM1602_I2C.obj
                    -)

line level    source

   1          //******************************************************************** 
   2          // 文件名称：  I2C.c 
   3          // 创建日期：  2016-10-11 
   4          // 最新更改：  2016-10-11 
   5          // 描述：      I2C初始化  
   6          //********************************************************************                                    
             - 
   7          //#include "xc.h" 
   8          #include "FM1602_I2C.h" 
   9          
  10          /********************************************************************* 
  11          ** Function name:      I2CInit  
  12          ** Descriptions:       注意：必须将SDA、SCL引脚配置为输入引脚，<<DS P293>> 
  13          ** input parameters:   无 
  14          ** output parameters:  无
  15          ** Returned value:     无  
  16          **********************************************************************/ 
  17          #if 0
                void I2CInit (void)
                {                                            
                    SSP1STATbits.SMP = 1;           // 禁止标准速度模式下的压摆率控制     
                    SSP1STATbits.CKE = 0;           // 禁止SMBus特定输入      
                    SSP1CON1bits.SSPEN = 1;         // 使能I2C,并将SDA 和SCL引脚配     
                    SSP1CON1bits.SSPM = 0x8;        // I2C主模式      
                    SSP1ADD = I2C_BPS;              // Fclock = Fosc / ((SSP1ADD + 1)*4)                                   
             - 
                }  
              #endif
  27            void I2CInit (void)
  28            {                                            
  29   1            P13_Quasi_Mode;                         //set SCL (P13) is Quasi mode
  30   1            P14_Quasi_Mode;                         //set SDA (P14) is Quasi mode
  31   1            I2CPX = 0;                              //选择I2C脚
  32   1            set_I2CEN;                              // 使能I2C
  33   1            I2CLK = I2C_CLOCK;                      // Fclock = Fosc / ((I2CLK + 1)*4) 
  34   1        } 
  35          
  36          /********************************************************************* 
  37          ** Function name:       I2C_Error ( ) 
  38          ** Descriptions:        I2C报错 
  39          ** input parameters:    无 
  40          ** output parameters:   无 
  41          ** Returned value:      无  
  42          **********************************************************************/   
  43          void I2CError(void)
  44          {
  45   1      //    P3 = I2STAT;
  46   1      //    P3 = ERROR_CODE;
  47   1          while (1)P12 = 0;    
  48   1      }
  49          
  50          /********************************************************************* 
  51          ** Function name:       I2CStart ( ) 
C51 COMPILER V9.00   FM1602_I2C                                                            03/25/2017 17:07:57 PAGE 2   

  52          ** Descriptions:        I2C开始 
  53          ** input parameters:    无 
  54          ** output parameters:   无 
  55          ** Returned value:      无  
  56          **********************************************************************/   
  57            void I2CStart ( )
  58            {    
  59   1      //      while (!Idle);      
  60   1      //      SSP1CON2bits.SEN = 1;           // 在SDA和SCL引脚上发出启动条件，硬件自动清零     
  61   1      //      while(SSP1CON2bits.SEN);        // 启动条件发送完成     
  62   1            while(!Idle);  
  63   1            set_STA;                          /* Send Start bit to I2C EEPROM */
  64   1      //      clr_SI;
  65   1      //      while (!SI);                      //Check SI set or not
  66   1      //      if (I2STAT != 0x08)               //Check status value after every step
  67   1      //          I2CError();
  68   1        }   
  69          /********************************************************************* 
  70          ** Function name:       I2CStop ( )
  71          ** Descriptions:        I2C停止 
  72          ** input parameters:    无 
  73          ** output parameters:   无 
  74          ** Returned value:      无  
  75          **********************************************************************/ 
  76            void I2CStop()
  77            {     
  78   1            //while (!Idle);      
  79   1      //      SSP1CON2bits.PEN = 1;           // 在SDA和SCL引脚上发出停止条件，硬件自动清零     
  80   1      //      while(SSP1CON2bits.PEN);        // 停止条件发送完成     
  81   1            set_STO;
  82   1            clr_SI;
  83   1            while (STO);                      /* Check STOP signal */
  84   1            while(!Idle);  
  85   1        }   
  86          /********************************************************************* 
  87          ** Function name:       ReStart() 
  88          ** Descriptions:        I2C ，ReStart 
  89          ** input parameters:    无 
  90          ** output parameters:   无 
  91          ** Returned value:      无  
  92          **********************************************************************/ 
  93            void ReStart()
  94            {      
  95   1            while (!Idle);                
  96   1      //      SSP1CON2bits.RSEN = 1;          // 在SDA和SCL引脚上发出重复启动条件，硬件自动清零      
  97   1      //      while(SSP1CON2bits.RSEN);       // 重复启动条件发送完成    
  98   1            set_STA;                          /* Send Start bit to I2C EEPROM */
  99   1            while(!Idle);  
 100   1        }   
 101          /********************************************************************* 
 102          ** Function name:       I2CSendByte() 
 103          ** Descriptions:        SSP1BUF中写入字节 
 104          ** input parameters:    I2CSnBy，要发送的数据 
 105          ** output parameters:   无 
 106          ** Returned value:      无  
 107          **********************************************************************/ 
 108            void I2CSendByte(unsigned char I2CSnBy) 
 109            {    
 110   1      //      while (!Idle);      
 111   1      //      SSP1BUF = I2CSnBy;              // SSP1BUF中写入字节 
 112   1      //      while(!Idle); 
 113   1              clr_STA; 
C51 COMPILER V9.00   FM1602_I2C                                                            03/25/2017 17:07:57 PAGE 3   

 114   1              I2DAT = I2CSnBy;
 115   1      //        clr_SI;
 116   1      //        while (!SI);                                //Check SI set or not
 117   1      //        if (I2STAT != 0x18)              
 118   1      //            I2CError();
 119   1        }   
 120          /********************************************************************* 
 121          ** Function name:        
 122          ** Descriptions:         
 123          ** input parameters: 
 124          ** output parameters:   无 
 125          ** Returned value:      无 
 126          **********************************************************************/   
 127            void WriteCommand(unsigned char Command)
 128            {    
 129   1      //      unsigned char Temp_C;      
 130   1      //      I2CStart();                     // I2C开始     
 131   1      //      I2CSendByte(Slave_Add);         // 从器件地址      
 132   1      //      Temp_C = Command & 0xF0;     
 133   1      //      Temp_C |= 0x0C;                 // P3=1  EN=1  RW=0  RS=0      
 134   1      //      I2CSendByte(Temp_C);                   
 135   1      //      Temp_C &= 0xF8;                 // P3=1  EN=0  RW=0  RS=0      
 136   1      //      I2CSendByte(Temp_C);                
 137   1      //      Temp_C = (Command & 0x0F)<< 4;      
 138   1      //      Temp_C |= 0x0C;                 // P3=1  EN=1  RW=0  RS=0     
 139   1      //      I2CSendByte(Temp_C);     
 140   1      //      Temp_C &= 0xF8;                 // P3=1  EN=0  RW=0  RS=0     
 141   1      //      I2CSendByte(Temp_C);            
 142   1      //      I2CStop();                      // I2C停止 
 143   1            I2CStart();
 144   1            clr_SI;
 145   1            while (!SI);                      //Check SI set or not
 146   1            if (I2STAT != 0x08)               //Check status value after every step
 147   1                I2CError();
 148   1            I2CSendByte(Slave_Add);
 149   1            clr_SI;
 150   1            while (!SI);                      //Check SI set or not
 151   1            if (I2STAT != 0x18)               //Check status value after every step
 152   1                I2CError();
 153   1            I2CSendByte(Command);
 154   1            clr_SI;
 155   1            while (!SI);                      //Check SI set or not
 156   1            if (I2STAT != 0x28)               //Check status value after every step
 157   1                I2CError();
 158   1            I2CStop(); 
 159   1        }    
 160          /********************************************************************* 
 161          ** Function name:       
 162          ** Descriptions:         
 163          ** input parameters:     
 164          ** output parameters:   无 
 165          ** Returned value:      无  
 166          **********************************************************************/   
 167            void WriteData (unsigned char Data)
 168            {      
 169   1            unsigned char Temp_D;      
 170   1            I2CStart();                     // I2C开始     
 171   1            I2CSendByte(Slave_Add);         // 从器件地址       
 172   1            Temp_D = Data & 0xF0;                  
 173   1            Temp_D |= 0x0D;                 // P3=1  EN=1  RW=0  RS=1    
 174   1            I2CSendByte(Temp_D);      
 175   1            Temp_D &= 0xF9;                 // P3=1  EN=0  RW=0  RS=1    
C51 COMPILER V9.00   FM1602_I2C                                                            03/25/2017 17:07:57 PAGE 4   

 176   1            I2CSendByte(Temp_D);
 177   1            Temp_D = (Data & 0x0F)<< 4;      
 178   1            Temp_D |= 0x0D;                 // P3=1  EN=1  RW=0  RS=1     
 179   1            I2CSendByte(Temp_D);      
 180   1            Temp_D &= 0xF9;                 // P3=1  EN=0  RW=0  RS=1     
 181   1            I2CSendByte(Temp_D);            
 182   1            I2CStop();                      // I2C停止 
 183   1        }  
 184           /********************************************************************* 
 185          ** Function name:       LCD1602Init(void),LCD1602初始化 
 186          ** Descriptions:        写一次，偶尔不能正常显示，重复2次 
 187          ** input parameters:     
 188          ** output parameters:   无 
 189          ** Returned value:      无  
 190          **********************************************************************/ 
 191            void LCD1602Init(void)
 192              {      
 193   1              __delay_ms(10);                                         
 194   1              WriteCommand(0x33); 
 195   1              __delay_ms(5);   
 196   1              WriteCommand(0x32);
 197   1              __delay_ms(5);   
 198   1              WriteCommand(0x28);
 199   1              __delay_ms(5);  
 200   1              WriteCommand(0x0C); 
 201   1              __delay_ms(5);    
 202   1              WriteCommand(0x06);
 203   1              __delay_ms(5);      
 204   1              WriteCommand(0x01); 
 205   1              __delay_ms(5); // 清屏          
 206   1              __delay_ms(10);                                          
 207   1              WriteCommand(0x33); 
 208   1              __delay_ms(5);   
 209   1              WriteCommand(0x32); 
 210   1              __delay_ms(5);   
 211   1              WriteCommand(0x28); 
 212   1              __delay_ms(5);   
 213   1              WriteCommand(0x0C); 
 214   1              __delay_ms(5);   
 215   1              WriteCommand(0x06); 
 216   1              __delay_ms(5);     
 217   1              WriteCommand(0x01); 
 218   1              __delay_ms(5); // 清屏          
 219   1          }   
 220          /******************************************************************** 
 221          ** Function name:       L1602_char(uchar col,uchar row,char sign)  
 222          ** Descriptions:        改变液晶中某位的值，如果要让第一行，第五个字符显示"b" ，                         
 223              调用该函数如,Dip_Single_char(1,5,'A'); 
 224          ** input parameters:    行，列，需要输入1602的数据 
 225          ** output parameters:   无 
 226          ** Returned value:      无
 227          *********************************************************************/   
 228            void Dip_Single_char(unsigned char col,unsigned char row,unsigned char sign)
 229            {     
 230   1            unsigned char a;     
 231   1            if(col == 1) a = 0x80;     
 232   1            if(col == 2) a = 0xc0;     
 233   1            a = a + row - 1;     
 234   1            WriteCommand(a);     
 235   1            WriteData(sign); 
 236   1        }   
 237          /******************************************************************** 
C51 COMPILER V9.00   FM1602_I2C                                                            03/25/2017 17:07:57 PAGE 5   

 238          ** Function name:       Dip_Single_char 
 239          ** Descriptions:        显示int型数据,5位 
 240          ** input parameters:    行，列，数据 
 241          ** output parameters:   无 
 242          ** Returned value:      无  
 243          *********************************************************************/   
 244            void DisDec(unsigned char col_D,unsigned char row_D,unsigned int Temp_k )
 245            {           
 246   1            unsigned int Temp_Ts;      
 247   1            unsigned char Table[5];         // 数字与1602显示码转换            
 248   1            unsigned char q;               
 249   1            if(Temp_k>=65535) Temp_k=65535;       
 250   1            Table[0] = Temp_k/10000+48;     // 万位       
 251   1            Temp_Ts  = Temp_k%10000;        // 取余，0-9999      
 252   1            Table[1] = Temp_Ts/1000+48;     // 千位     
 253   1            Temp_Ts  = Temp_Ts%1000;        // 取余，0-999     
 254   1            Table[2] = Temp_Ts/100+48;      // 百位     
 255   1            Temp_Ts  = Temp_Ts%100;         // 取余，0-99     
 256   1            Table[3] = Temp_Ts/10+48;       // 十位    
 257   1            Table[4] = Temp_Ts%10+48;       // 个位           
 258   1            for(q=0;q<5;q++)
 259   1            {               // 显示         
 260   2                Dip_Single_char(col_D,q+row_D,Table[q]);    
 261   2            } 
 262   1        }   
 263          /********************************************************************* 
 264          **                            The End  
 265          *********************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    530    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
