C51 COMPILER V9.52.0.0   COMMON                                                            08/23/2016 09:21:07 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE COMMON
OBJECT MODULE PLACED IN .\Output\Common.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\Common\Common.c BROWSE INCDIR(..\..\Include) DEFINE(FOSC_160000) DEBU
                    -G OBJECTEXTEND PRINT(.\LST\Common.lst) TABS(2) OBJECT(.\Output\Common.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2016 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2016
  12          //********************************************************************************************************
             -***
  13          
  14          #include <stdio.h>
  15          #include "N76E003.h"
  16          #include "Define.h"
  17          #include "Common.h"
  18          #include "Delay.h"
  19          #include "SFR_Macro.h"
  20          #include "Function_define.h"
  21          
  22          //----------------------------------------------------------------------------------
  23          // use timer1 as Baudrate generator, Maxmum Baudrate can ???? bps @ 16MHZ
  24          //----------------------------------------------------------------------------------
  25          void InitialUART0_Timer1(UINT32 u32Baudrate)    //T1M = 1, SMOD = 1
  26          {
  27   1          SCON = 0x52;     //UART0 Mode1,REN=1,TI=1
  28   1          TMOD |= 0x20;    //Timer1 Mode1
  29   1          
  30   1          set_SMOD;        //UART0 Double Rate Enable
  31   1          set_T1M;
  32   1          clr_BRCK;        //Serial port 0 baud rate clock source = Timer1
  33   1      
  34   1       
  35   1      #ifdef FOSC_160000
  36   1          TH1 = 256 - (1000000/u32Baudrate+1);               /*16 MHz */
  37   1      #endif      
  38   1      #ifdef FOSC_221184
                  TH1 = 256 - (1382400/u32Baudrate);              /*22.1184 MHz */
              #endif
  41   1          set_TR1;
  42   1      }
  43          //---------------------------------------------------------------
  44          void InitialUART0_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
  45          {
  46   1          SCON = 0x52;     //UART0 Mode1,REN=1,TI=1
  47   1          set_SMOD;        //UART0 Double Rate Enable
C51 COMPILER V9.52.0.0   COMMON                                                            08/23/2016 09:21:07 PAGE 2   

  48   1          T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  49   1          set_BRCK;        //UART0 baud rate clock source = Timer3
  50   1      
  51   1      #ifdef FOSC_160000
  52   1        RH3    = HIBYTE(65536 - (1000000/u32Baudrate));     /*16 MHz */
  53   1        RL3    = LOBYTE(65536 - (1000000/u32Baudrate));     /*16 MHz */
  54   1      #endif
  55   1      #ifdef FOSC_221184
                  RH3    = HIBYTE(65536 - (1382400/u32Baudrate));   /*22.1184 MHz */
                  RL3    = LOBYTE(65536 - (1382400/u32Baudrate));   /*22.1184 MHz */
              #endif
  59   1          set_TR3;         //Trigger Timer3
  60   1      }
  61          
  62          UINT8 Receive_Data_From_UART0(void)
  63          {
  64   1          UINT8 c;
  65   1          
  66   1          while (!RI);
  67   1          c = SBUF;
  68   1          RI = 0;
  69   1          return (c);
  70   1      }
  71          
  72          void Send_Data_To_UART0 (UINT8 c)
  73          {
  74   1          TI = 0;
  75   1          SBUF = c;
  76   1          while(TI==0);
  77   1      }
  78          
  79          
  80          //---------------------------------------------------------------
  81          void InitialUART1_Timer3(UINT32 u32Baudrate) //use timer3 as Baudrate generator
  82          {
  83   1          SCON_1 = 0x52;   //UART1 Mode1,REN_1=1,TI_1=1
  84   1          T3CON &= 0xF8;   //T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)
  85   1         
  86   1      #ifdef FOSC_160000
  87   1        RH3    = HIBYTE(65536 - (1000000/u32Baudrate));     /*16 MHz */
  88   1        RL3    = LOBYTE(65536 - (1000000/u32Baudrate));     /*16 MHz */
  89   1      #endif
  90   1      #ifdef FOSC_221184
                  RH3    = HIBYTE(65536 - (1382400/u32Baudrate));   /*22.1184 MHz */
                  RL3    = LOBYTE(65536 - (1382400/u32Baudrate));   /*22.1184 MHz */
              #endif
  94   1          set_TR3;         //Trigger Timer3
  95   1      }
  96          
  97          UINT8 Receive_Data_From_UART1(void)
  98          {
  99   1          UINT8 c;
 100   1          
 101   1          while (!RI_1);
 102   1          c = SBUF_1;
 103   1          RI_1 = 0;
 104   1          return (c);
 105   1      }
 106          
 107          void Send_Data_To_UART1 (UINT8 c)
 108          {
 109   1          TI_1 = 0;
C51 COMPILER V9.52.0.0   COMMON                                                            08/23/2016 09:21:07 PAGE 3   

 110   1          SBUF_1 = c;
 111   1          while(TI_1==0);
 112   1      }
 113          
 114          
 115          /*==========================================================================*/
 116          #ifdef SW_Reset
              void SW_Reset(void)
              {
                  TA = 0xAA;
                  TA = 0x55;
                  set_SWRST;
              }
              #endif
 124          /*==========================================================================*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    247    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
