C51 COMPILER V9.52.0.0   ISP_LD_AP                                                         08/23/2016 09:22:58 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ISP_LD_AP
OBJECT MODULE PLACED IN .\Output\ISP_LD-AP.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\ISP_LD-AP.c BROWSE INCDIR(..\..\Include) DEFINE(FOSC_160000) DEBUG OBJ
                    -ECTEXTEND PRINT(.\LST\ISP_LD-AP.lst) TABS(2) OBJECT(.\Output\ISP_LD-AP.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2015 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2016
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E003 LDROM program APROM demo code
  16          //********************************************************************************************************
             -***
  17          
  18          //********************************************************************************************************
             -***
  19          //  Before using this demo code, please remind below CONFOGs setting, thanks.
  20          //                 CONFIG0.7 --> CBS=0
  21          //                 CONFIG1 = 0xFC, because this demo code size is 2495 Byte
  22          //********************************************************************************************************
             -***
  23          #include <stdio.h>
  24          #include "N76E003.h"
  25          #include "Define.h"
  26          #include "Common.h"
  27          #include "Delay.h"
  28          #include "SFR_Macro.h"
  29          #include "Function_define.h"
  30          
  31          
  32          #define     CID_READ            0x0B
  33          #define     DID_READ            0x0C
  34          #define     CFG_READ            0xC0
  35          #define     CFG_ERASE           0xE2
  36          
  37          #define     PAGE_ERASE_AP       0x22
  38          #define     BYTE_READ_AP        0x00
  39          #define     BYTE_PROGRAM_AP     0x21
  40          
  41          #define     BYTE_PROGRAM_CFG    0xE1
  42          #define     BYTE_READ_CFG       0xC0
  43          
C51 COMPILER V9.52.0.0   ISP_LD_AP                                                         08/23/2016 09:22:58 PAGE 2   

  44          #define     PAGE_SIZE           128
  45          
  46          #define     APROM_SIZE          8192   
  47          #define     APROM_START_ADDR    0x0000
  48          
  49          #define     ERASE_FAIL          0x70
  50          #define     PROGRAM_FAIL        0x71
  51          #define     IAPFF_FAIL          0x72
  52          #define     IAP_PASS            0x00
  53          
  54          //--------------------------------------------------------------------------------------------------------
             ----
  55          void Trigger_IAP(void)
  56          {   
  57   1          set_IAPGO;                                  //trigger IAP
  58   1          if((CHPCON&SET_BIT6)==SET_BIT6)             //check IAPFF (CHPCON.6), if flag = 1, the ISP process is 
             -fail.
  59   1          {
  60   2              while(1)
  61   2              {
  62   3                clr_GPIO1;
  63   3                Timer0_Delay1ms(100);
  64   3                set_GPIO1;
  65   3                Timer0_Delay1ms(100);
  66   3              }
  67   2          }
  68   1      }                 
  69          
  70          //--------------------------------------------------------------------------------------------------------
             ----
  71          void Erase_CONFIG(void)
  72          {   
  73   1          set_IAPEN;
  74   1          
  75   1          IAPAL = 0x00;
  76   1          IAPAH = 0x00;
  77   1          IAPFD = 0xFF;
  78   1          IAPCN = CFG_ERASE;
  79   1          
  80   1          set_CFUEN;
  81   1          Trigger_IAP();
  82   1          clr_CFUEN;
  83   1          
  84   1          clr_IAPEN;
  85   1      }
  86          //--------------------------------------------------------------------------------------------------------
             ----
  87          void Erase_APROM(void)
  88          {   
  89   1          UINT16 u16Count;
  90   1      
  91   1          set_IAPEN;
  92   1          set_APUEN;                        // To erase or program APROM must enable APUEN
  93   1        
  94   1          IAPFD = 0xFF;                     // MUST setting IAPFD = 0xFF when do erase process.
  95   1          IAPCN = PAGE_ERASE_AP;
  96   1      
  97   1          for(u16Count=0x0000;u16Count<APROM_SIZE/PAGE_SIZE;u16Count++)
  98   1          {        
  99   2              IAPAL = LOBYTE(u16Count*PAGE_SIZE + APROM_START_ADDR);
 100   2              IAPAH = HIBYTE(u16Count*PAGE_SIZE + APROM_START_ADDR);
 101   2              Trigger_IAP(); 
C51 COMPILER V9.52.0.0   ISP_LD_AP                                                         08/23/2016 09:22:58 PAGE 3   

 102   2          } 
 103   1          
 104   1          clr_APUEN;
 105   1          clr_IAPEN;
 106   1      }
 107          //--------------------------------------------------------------------------------------------------------
             ----
 108          BIT Erase_APROM_Verify(void)
 109          {   
 110   1          UINT16 u16Count;
 111   1          BIT    Error_Flag = 0;
 112   1      
 113   1          set_IAPEN;
 114   1          
 115   1          IAPAL = LOBYTE(APROM_START_ADDR);
 116   1          IAPAH = HIBYTE(APROM_START_ADDR);
 117   1          IAPCN = BYTE_READ_AP;
 118   1      
 119   1          for(u16Count=0;u16Count<APROM_SIZE/PAGE_SIZE;u16Count++)
 120   1          {   
 121   2              IAPFD = 0x00;    
 122   2              Trigger_IAP();
 123   2      
 124   2              if(IAPFD != 0xFF)
 125   2              {
 126   3                  Error_Flag = 1;
 127   3                  break;
 128   3              }
 129   2      
 130   2              IAPAL++;
 131   2              if(IAPAL == 0x00)
 132   2              {
 133   3                  IAPAH++;
 134   3              }
 135   2          } 
 136   1          
 137   1          clr_IAPEN;
 138   1          
 139   1          if(Error_Flag == 1)
 140   1              return FAIL;
 141   1          else
 142   1              return PASS;
 143   1      }
 144          //--------------------------------------------------------------------------------------------------------
             ----
 145          void Program_APROM(void)
 146          {   
 147   1          UINT16 u16Count;
 148   1      
 149   1          set_IAPEN;
 150   1          set_APUEN;   
 151   1        
 152   1          IAPAL = LOBYTE(APROM_START_ADDR);
 153   1          IAPAH = HIBYTE(APROM_START_ADDR);
 154   1          IAPFD = 0xFF;
 155   1          IAPCN = BYTE_PROGRAM_AP;
 156   1      
 157   1          for(u16Count=0;u16Count<APROM_SIZE;u16Count++)
 158   1          {   
 159   2              IAPFD++;     
 160   2              Trigger_IAP();
 161   2             
C51 COMPILER V9.52.0.0   ISP_LD_AP                                                         08/23/2016 09:22:58 PAGE 4   

 162   2              IAPAL++;
 163   2              if(IAPAL == 0)
 164   2              {
 165   3                  IAPAH++;
 166   3              }
 167   2          } 
 168   1          
 169   1          clr_APUEN;
 170   1          clr_IAPEN;
 171   1      }
 172          //--------------------------------------------------------------------------------------------------------
             ----
 173          BIT Program_APROM_Verify(void)
 174          {   
 175   1          UINT16 u16Count;
 176   1          UINT8  u8Read_Data;
 177   1          BIT    Error_Flag = 0;
 178   1      
 179   1          set_IAPEN;
 180   1          
 181   1          IAPAL = LOBYTE(APROM_START_ADDR);
 182   1          IAPAH = HIBYTE(APROM_START_ADDR);
 183   1          IAPCN = BYTE_READ_AP;
 184   1      
 185   1          u8Read_Data = 0x00;
 186   1      
 187   1          for(u16Count=0;u16Count<APROM_SIZE;u16Count++)
 188   1          {   
 189   2              Trigger_IAP();
 190   2              if(IAPFD != u8Read_Data)
 191   2              {
 192   3                  Error_Flag = 1;
 193   3                  break;
 194   3              }
 195   2      
 196   2              IAPAL++;
 197   2              if(IAPAL == 0)
 198   2              {
 199   3                  IAPAH++;
 200   3              }
 201   2              u8Read_Data ++;
 202   2          } 
 203   1      
 204   1          clr_IAPEN;
 205   1           
 206   1          if(Error_Flag == 1)
 207   1              return FAIL;
 208   1          else
 209   1              return PASS;
 210   1      }
 211          //--------------------------------------------------------------------------------------------------------
             ----
 212          void Program_CONFIG(UINT8 u8Address,UINT8 u8Data)
 213          {   
 214   1          set_IAPEN;
 215   1          
 216   1          IAPAL = u8Address;
 217   1          IAPAH = 0x00;
 218   1          IAPFD = u8Data;
 219   1          IAPCN = BYTE_PROGRAM_CFG;
 220   1          
 221   1          set_CFUEN;
C51 COMPILER V9.52.0.0   ISP_LD_AP                                                         08/23/2016 09:22:58 PAGE 5   

 222   1          Trigger_IAP();
 223   1          clr_CFUEN;
 224   1          
 225   1          clr_IAPEN;
 226   1      }
 227          
 228          //--------------------------------------------------------------------------------------------------------
             ----
 229          void main (void) 
 230          {
 231   1          Set_All_GPIO_Quasi_Mode;
 232   1        
 233   1          clr_GPIO1;
 234   1          Timer0_Delay1ms(300);
 235   1          set_GPIO1;
 236   1          Timer0_Delay1ms(300);
 237   1          clr_GPIO1;
 238   1          Timer0_Delay1ms(300);
 239   1          set_GPIO1;
 240   1      
 241   1        
 242   1          Erase_APROM();
 243   1      //    if(Erase_APROM_Verify() == FAIL)
 244   1      //    {
 245   1      //        DISPLAY_LED = ERASE_FAIL;
 246   1      //        while(1);
 247   1      //    }
 248   1      
 249   1          Program_APROM();
 250   1      //    if(Program_APROM_Verify() == FAIL)
 251   1      //    {
 252   1      //        DISPLAY_LED = PROGRAM_FAIL;
 253   1      //        while(1);
 254   1      //    }   
 255   1          Program_CONFIG(0x04,0x0F);              //Program CONFIG4 =  0x0F; Enable WDT reset function. 
 256   1          //Please always very carefully about the CONFIG program function. espcially about the CBS bit / LDROM si
             -ze...
 257   1          Timer0_Delay1ms(200);
 258   1          while(1);
 259   1      }
 260          //--------------------------------------------------------------------------------------------------------
             ----


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    741    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
