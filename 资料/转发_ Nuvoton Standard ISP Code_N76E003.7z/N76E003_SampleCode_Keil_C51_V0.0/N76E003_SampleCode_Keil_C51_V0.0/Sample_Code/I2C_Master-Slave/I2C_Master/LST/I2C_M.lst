C51 COMPILER V9.00   I2C_M                                                                 03/16/2017 10:38:41 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE I2C_M
OBJECT MODULE PLACED IN .\Output\I2C_M.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Code\I2C_M.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\Common;..\..\..\In
                    -clude) DEFINE(FOSC_160000) DEBUG OBJECTEXTEND PRINT(.\LST\I2C_M.lst) TABS(2) OBJECT(.\Output\I2C_M.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2016 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/29/2016
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E003 I2C master mode demo code, the Slave address = 0xA4
  16          //
  17          //   ____________            _____________ 
  18          //  |            |   SDA    |             |
  19          //  |            |<-------->|             |
  20          //  |            |          |             |
  21          //  |N76E003(M) |          | N76E003(S) |
  22          //  |(I2C_Master)|          | (I2C_Slave) |
  23          //  |            |   SCL    |             |
  24          //  |            |--------->|             |
  25          //  |____________|          |_____________|
  26          //
  27          //  The protocol of I2C is same the "24LC64"
  28          //********************************************************************************************************
             -***
  29          
  30          
  31          #include <stdio.h>
  32          #include <absacc.h>
  33          #include "N76E003.h"
  34          #include "Define.h"
  35          #include "Common.h"
  36          #include "Delay.h"
  37          #include "SFR_Macro.h"
  38          #include "Function_define.h"
  39          
  40          #define I2C_CLOCK               19
  41          #define EEPROM_SLA              0xe6
  42          #define EEPROM_WR               0
  43          #define EEPROM_RD               1
  44          #define ERROR_CODE              0x78
  45          #define PAGE_SIZE               3
C51 COMPILER V9.00   I2C_M                                                                 03/16/2017 10:38:41 PAGE 2   

  46          
  47          //UINT8 BUFF[40];
  48          extern   unsigned char code g_abMaxxDSPCommands[];
  49          
  50          //========================================================================================================
  51          void Init_I2C(void)
  52          {
  53   1      //    /* Set I2C clock rate */
  54   1          I2CLK = I2C_CLOCK; 
  55   1      
  56   1          /* Enable I2C */
  57   1          set_I2CEN;                                   
  58   1      }
  59          //========================================================================================================
  60          //void I2C_
  61          //========================================================================================================
  62          void I2C_Error(void)
  63          {
  64   1      //    P3 = I2STAT;
  65   1      //    P3 = ERROR_CODE;
  66   1          while (1)P12 = 0;    
  67   1      }
  68          //========================================================================================================
  69          void I2C_Process(UINT8 *u8DAT)
  70          {
  71   1          UINT32 u32Count;
  72   1      
  73   1      //--------------------------------------------------------------------------------------------
  74   1      //----  Page Write----------------------------------------------------------------------------
  75   1      //--------------------------------------------------------------------------------------------
  76   1          /* Step1 */
  77   1          set_STA;                                    /* Send Start bit to I2C EEPROM */
  78   1          clr_SI;
  79   1          while (!SI);                                //Check SI set or not
  80   1          if (I2STAT != 0x08)                         //Check status value after every step
  81   1              I2C_Error();
  82   1          
  83   1          /* Step2 */
  84   1          clr_STA;                                    //STA=0
  85   1          I2DAT = (EEPROM_SLA | EEPROM_WR);
  86   1          clr_SI;
  87   1          while (!SI);                                //Check SI set or not
  88   1          if (I2STAT != 0x18)              
  89   1              I2C_Error();
  90   1      
  91   1      //    /* Step3 */
  92   1      //    I2DAT = 0x00;                               //address high for I2C EEPROM
  93   1      //    clr_SI;
  94   1      //    while (!SI);                                //Check SI set or not
  95   1      //    if (I2STAT != 0x28)              
  96   1      //        I2C_Error();
  97   1      //                    
  98   1      //    /* Step4 */
  99   1      //    I2DAT = 0x00;                               //address low for I2C EEPROM
 100   1      //    clr_SI;
 101   1      //    while (!SI);                                //Check SI set or not
 102   1      //    if (I2STAT != 0x28)              
 103   1      //        I2C_Error();
 104   1      
 105   1      //    I2DAT = u8DAT;
 106   1      //    clr_SI;
 107   1      //    while (!SI);
C51 COMPILER V9.00   I2C_M                                                                 03/16/2017 10:38:41 PAGE 3   

 108   1      //    if (I2STAT != 0x28) 
 109   1      //        I2C_Error();
 110   1          /* Step5 */
 111   1          for (u32Count = 0; u32Count < PAGE_SIZE; u32Count++)
 112   1          {
 113   2              I2DAT = *u8DAT++;
 114   2              clr_SI;
 115   2              while (!SI);                            //Check SI set or not
 116   2              if (I2STAT != 0x28)              
 117   2                  I2C_Error();
 118   2      
 119   2      //        u8DAT = ~u8DAT;        
 120   2          }
 121   1      
 122   1      //--------------------------------------------------------------------------------------------
 123   1      //----  Waitting the ready for I2C write------------------------------------------------------
 124   1      //--------------------------------------------------------------------------------------------
 125   1      //    /* Step6 */
 126   1      //    do{
 127   1      //        set_STO;
 128   1      //        clr_SI;
 129   1      //        
 130   1      //        set_STA;                                //Check if no ACK is returned by EEPROM, it is under tim
             -ed-write cycle
 131   1      //        clr_SI;
 132   1      //        while (!SI);                            //Check SI set or not
 133   1      //        if (I2STAT != 0x08)                     //Check status value after every step
 134   1      //            I2C_Error();
 135   1      
 136   1      //        clr_STA;
 137   1      //        I2DAT = (EEPROM_SLA | EEPROM_WR);
 138   1      //        clr_SI;
 139   1      //        while (!SI);                            //Check SI set or not
 140   1      //    }while (I2STAT != 0x18);
 141   1      //    
 142   1      //    /* Step7 */
 143   1      //    set_STO;
 144   1      //    clr_SI;
 145   1      //    while (STO);                                /* Check STOP signal */
 146   1      //--------------------------------------------------------------------------------------------
 147   1      //----  Page Read ----------------------------------------------------------------------------
 148   1      //--------------------------------------------------------------------------------------------
 149   1      //    /* Step8 */
 150   1      //    set_STA;
 151   1      //    clr_SI;          
 152   1      //    while (!SI);                                //Check SI set or not
 153   1      //    if (I2STAT != 0x08)                         //Check status value after every step
 154   1      //        I2C_Error();
 155   1      
 156   1      //    /* Step9 */
 157   1      //    I2DAT = (EEPROM_SLA | EEPROM_WR);
 158   1      //    clr_STA;
 159   1      //    clr_SI;
 160   1      //    while (!SI);                                //Check SI set or not
 161   1      //    if (I2STAT != 0x18)              
 162   1      //        I2C_Error();
 163   1      
 164   1      //    /* Step10 */
 165   1      //    I2DAT = 0x00;                               //address high for I2C EEPROM
 166   1      //    clr_SI;
 167   1      //    while (!SI);                                //Check SI set or not
 168   1      //    if (I2STAT != 0x28)              
C51 COMPILER V9.00   I2C_M                                                                 03/16/2017 10:38:41 PAGE 4   

 169   1      //        I2C_Error();
 170   1      
 171   1      //    /* Step11 */
 172   1      //    I2DAT = 0x00;                               //address low for I2C EEPROM
 173   1      //    clr_SI;
 174   1      //    while (!SI);                                //Check SI set or not
 175   1      //    if (I2STAT != 0x28)              
 176   1      //        I2C_Error();
 177   1      
 178   1      //    /* Step12 */
 179   1      //    /* Repeated START */
 180   1      //    set_STA;                       
 181   1      //    clr_SI;
 182   1      //    while (!SI);                                //Check SI set or not
 183   1      //    if (I2STAT != 0x10)                         //Check status value after every step
 184   1      //        I2C_Error();
 185   1      //    
 186   1      //    /* Step13 */
 187   1      //    clr_STA;                                    //STA needs to be cleared after START codition is genera
             -ted
 188   1      //    I2DAT = (EEPROM_SLA | EEPROM_RD);
 189   1      //    clr_SI;
 190   1      //    while (!SI);                                //Check SI set or not
 191   1      //    if (I2STAT != 0x40)              
 192   1      //        I2C_Error();
 193   1      //    
 194   1          /* Step14 */
 195   1      //    for (u32Count = 0; u32Count <PAGE_SIZE-1; u32Count++)
 196   1      //    {
 197   1      //        set_AA;
 198   1      //        clr_SI;        
 199   1      //        while (!SI);                            //Check SI set or not
 200   1      
 201   1      //        if (I2STAT != 0x50)              
 202   1      //            I2C_Error();
 203   1      //        
 204   1      ////        if (I2DAT != u8DAT)             
 205   1      ////            I2C_Error();
 206   1      ////        u8DAT = ~u8DAT; 
 207   1      //        BUFF[u32Count] = I2DAT;
 208   1      //    } 
 209   1          
 210   1      //    /* Step15 */
 211   1      //    clr_AA;
 212   1      //    clr_SI;
 213   1      //    while (!SI);                                //Check SI set or not
 214   1      //    if (I2STAT != 0x58)              
 215   1      //        I2C_Error();
 216   1      
 217   1      //    /* Step16 */
 218   1          set_STO;
 219   1          clr_SI;
 220   1          while (STO);                                /* Check STOP signal */ 
 221   1      }
 222          //========================================================================================================
 223          void main(void)
 224          {
 225   1          /* Note
 226   1             MCU power on system clock is HIRC (22.1184MHz), so Fsys = 22.1184MHz
 227   1          */
 228   1          UINT8 *p = g_abMaxxDSPCommands;
 229   1          UINT16  i=0,j=0;
C51 COMPILER V9.00   I2C_M                                                                 03/16/2017 10:38:41 PAGE 5   

 230   1          Set_All_GPIO_Quasi_Mode;  
 231   1          P13_OpenDrain_Mode;
 232   1          P14_OpenDrain_Mode;
 233   1          I2CPX = 0;
 234   1          Init_I2C();                                 //initial I2C circuit
 235   1          for(i=0;i<306;i++)  
 236   1          {
 237   2            I2C_Process(p);                          /* I2C Master will send 0x55,0xAA,.... to slave */
 238   2            p += 3; 
 239   2            //Timer2_Delay1ms(1);
 240   2            for(j=0;j<1500;j++);
 241   2          }
 242   1        
 243   1          //P0 = 0x00;
 244   1          //P3 = 0x00;
 245   1          
 246   1          while (1);
 247   1      /* =================== */
 248   1      }
 249          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    246    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
