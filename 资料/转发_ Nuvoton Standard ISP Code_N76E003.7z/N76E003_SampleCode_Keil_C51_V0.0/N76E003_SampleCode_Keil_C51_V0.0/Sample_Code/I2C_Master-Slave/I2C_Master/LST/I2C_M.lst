C51 COMPILER V9.52.0.0   I2C_M                                                             08/31/2016 15:22:50 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE I2C_M
OBJECT MODULE PLACED IN .\Output\I2C_M.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\I2C_M.c BROWSE INCDIR(..\..\..\Common;..\..\..\Include) DEFINE(FOSC_16
                    -0000) DEBUG OBJECTEXTEND PRINT(.\LST\I2C_M.lst) TABS(2) OBJECT(.\Output\I2C_M.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2016 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/29/2016
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E003 I2C master mode demo code, the Slave address = 0xA4
  16          //
  17          //   ____________            _____________ 
  18          //  |            |   SDA    |             |
  19          //  |            |<-------->|             |
  20          //  |            |          |             |
  21          //  |N76E003(M) |          | N76E003(S) |
  22          //  |(I2C_Master)|          | (I2C_Slave) |
  23          //  |            |   SCL    |             |
  24          //  |            |--------->|             |
  25          //  |____________|          |_____________|
  26          //
  27          //  The protocol of I2C is same the "24LC64"
  28          //********************************************************************************************************
             -***
  29          
  30          
  31          #include <stdio.h>
  32          #include "N76E003.h"
  33          #include "Define.h"
  34          #include "Common.h"
  35          #include "Delay.h"
  36          #include "SFR_Macro.h"
  37          #include "Function_define.h"
  38          
  39          #define I2C_CLOCK               13
  40          #define EEPROM_SLA              0xA4
  41          #define EEPROM_WR               0
  42          #define EEPROM_RD               1
  43          #define ERROR_CODE              0x78
  44          #define PAGE_SIZE               32
  45          
C51 COMPILER V9.52.0.0   I2C_M                                                             08/31/2016 15:22:50 PAGE 2   

  46          //========================================================================================================
  47          void Init_I2C(void)
  48          {
  49   1      //    /* Set I2C clock rate */
  50   1          I2CLK = I2C_CLOCK; 
  51   1      
  52   1          /* Enable I2C */
  53   1          set_I2CEN;                                   
  54   1      }
  55          //========================================================================================================
  56          void I2C_Error(void)
  57          {
  58   1      //    P3 = I2STAT;
  59   1      //    P3 = ERROR_CODE;
  60   1          while (1);    
  61   1      }
  62          //========================================================================================================
  63          void I2C_Process(UINT8 u8DAT)
  64          {
  65   1          UINT32 u32Count;
  66   1      
  67   1      //--------------------------------------------------------------------------------------------
  68   1      //----  Page Write----------------------------------------------------------------------------
  69   1      //--------------------------------------------------------------------------------------------
  70   1          /* Step1 */
  71   1          set_STA;                                    /* Send Start bit to I2C EEPROM */
  72   1          clr_SI;
  73   1          while (!SI);                                //Check SI set or not
  74   1          if (I2STAT != 0x08)                         //Check status value after every step
  75   1              I2C_Error();
  76   1          
  77   1          /* Step2 */
  78   1          clr_STA;                                    //STA=0
  79   1          I2DAT = (EEPROM_SLA | EEPROM_WR);
  80   1          clr_SI;
  81   1          while (!SI);                                //Check SI set or not
  82   1          if (I2STAT != 0x18)              
  83   1              I2C_Error();
  84   1      
  85   1          /* Step3 */
  86   1          I2DAT = 0x00;                               //address high for I2C EEPROM
  87   1          clr_SI;
  88   1          while (!SI);                                //Check SI set or not
  89   1          if (I2STAT != 0x28)              
  90   1              I2C_Error();
  91   1                          
  92   1          /* Step4 */
  93   1          I2DAT = 0x00;                               //address low for I2C EEPROM
  94   1          clr_SI;
  95   1          while (!SI);                                //Check SI set or not
  96   1          if (I2STAT != 0x28)              
  97   1              I2C_Error();
  98   1      
  99   1          /* Step5 */
 100   1          for (u32Count = 0; u32Count < PAGE_SIZE; u32Count++)
 101   1          {
 102   2              I2DAT = u8DAT;
 103   2              clr_SI;
 104   2              while (!SI);                            //Check SI set or not
 105   2              if (I2STAT != 0x28)              
 106   2                  I2C_Error();
 107   2      
C51 COMPILER V9.52.0.0   I2C_M                                                             08/31/2016 15:22:50 PAGE 3   

 108   2              u8DAT = ~u8DAT;        
 109   2          }
 110   1      
 111   1      //--------------------------------------------------------------------------------------------
 112   1      //----  Waitting the ready for I2C write------------------------------------------------------
 113   1      //--------------------------------------------------------------------------------------------
 114   1          /* Step6 */
 115   1          do{
 116   2              set_STO;
 117   2              clr_SI;
 118   2              
 119   2              set_STA;                                //Check if no ACK is returned by EEPROM, it is under timed
             --write cycle
 120   2              clr_SI;
 121   2              while (!SI);                            //Check SI set or not
 122   2              if (I2STAT != 0x08)                     //Check status value after every step
 123   2                  I2C_Error();
 124   2      
 125   2              clr_STA;
 126   2              I2DAT = (EEPROM_SLA | EEPROM_WR);
 127   2              clr_SI;
 128   2              while (!SI);                            //Check SI set or not
 129   2          }while (I2STAT != 0x18);
 130   1          
 131   1          /* Step7 */
 132   1          set_STO;
 133   1          clr_SI;
 134   1          while (STO);                                /* Check STOP signal */
 135   1      //--------------------------------------------------------------------------------------------
 136   1      //----  Page Read ----------------------------------------------------------------------------
 137   1      //--------------------------------------------------------------------------------------------
 138   1          /* Step8 */
 139   1          set_STA;
 140   1          clr_SI;          
 141   1          while (!SI);                                //Check SI set or not
 142   1          if (I2STAT != 0x08)                         //Check status value after every step
 143   1              I2C_Error();
 144   1      
 145   1          /* Step9 */
 146   1          I2DAT = (EEPROM_SLA | EEPROM_WR);
 147   1          clr_STA;
 148   1          clr_SI;
 149   1          while (!SI);                                //Check SI set or not
 150   1          if (I2STAT != 0x18)              
 151   1              I2C_Error();
 152   1      
 153   1          /* Step10 */
 154   1          I2DAT = 0x00;                               //address high for I2C EEPROM
 155   1          clr_SI;
 156   1          while (!SI);                                //Check SI set or not
 157   1          if (I2STAT != 0x28)              
 158   1              I2C_Error();
 159   1      
 160   1          /* Step11 */
 161   1          I2DAT = 0x00;                               //address low for I2C EEPROM
 162   1          clr_SI;
 163   1          while (!SI);                                //Check SI set or not
 164   1          if (I2STAT != 0x28)              
 165   1              I2C_Error();
 166   1      
 167   1          /* Step12 */
 168   1          /* Repeated START */
C51 COMPILER V9.52.0.0   I2C_M                                                             08/31/2016 15:22:50 PAGE 4   

 169   1          set_STA;                       
 170   1          clr_SI;
 171   1          while (!SI);                                //Check SI set or not
 172   1          if (I2STAT != 0x10)                         //Check status value after every step
 173   1              I2C_Error();
 174   1          
 175   1          /* Step13 */
 176   1          clr_STA;                                    //STA needs to be cleared after START codition is generate
             -d
 177   1          I2DAT = (EEPROM_SLA | EEPROM_RD);
 178   1          clr_SI;
 179   1          while (!SI);                                //Check SI set or not
 180   1          if (I2STAT != 0x40)              
 181   1              I2C_Error();
 182   1          
 183   1          /* Step14 */
 184   1          for (u32Count = 0; u32Count <PAGE_SIZE-1; u32Count++)
 185   1          {
 186   2              set_AA;
 187   2              clr_SI;        
 188   2              while (!SI);                            //Check SI set or not
 189   2      
 190   2              if (I2STAT != 0x50)              
 191   2                  I2C_Error();
 192   2              
 193   2              if (I2DAT != u8DAT)             
 194   2                  I2C_Error();
 195   2              u8DAT = ~u8DAT; 
 196   2          } 
 197   1          
 198   1          /* Step15 */
 199   1          clr_AA;
 200   1          clr_SI;
 201   1          while (!SI);                                //Check SI set or not
 202   1          if (I2STAT != 0x58)              
 203   1              I2C_Error();
 204   1      
 205   1          /* Step16 */
 206   1          set_STO;
 207   1          clr_SI;
 208   1          while (STO);                                /* Check STOP signal */ 
 209   1      }
 210          //========================================================================================================
 211          void main(void)
 212          {
 213   1          /* Note
 214   1             MCU power on system clock is HIRC (22.1184MHz), so Fsys = 22.1184MHz
 215   1          */
 216   1          
 217   1          Set_All_GPIO_Quasi_Mode;  
 218   1          Init_I2C();                                 //initial I2C circuit
 219   1          I2C_Process(0x55);                          /* I2C Master will send 0x55,0xAA,.... to slave */
 220   1          
 221   1          P0 = 0x00;
 222   1          P3 = 0x00;
 223   1          
 224   1          while (1);
 225   1      /* =================== */
 226   1      }
 227          


C51 COMPILER V9.52.0.0   I2C_M                                                             08/31/2016 15:22:50 PAGE 5   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    429    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
