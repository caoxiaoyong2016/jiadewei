C51 COMPILER V9.52.0.0   I2C_S                                                             08/31/2016 16:14:05 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE I2C_S
OBJECT MODULE PLACED IN .\Output\I2C_S.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\I2C_S.c BROWSE INCDIR(..\..\..\Include) DEFINE(FOSC_160000) DEBUG OBJE
                    -CTEXTEND PRINT(.\LST\I2C_S.lst) TABS(2) OBJECT(.\Output\I2C_S.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2015 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : May/1/2015
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E003 I2C Slave demo code
  16          //********************************************************************************************************
             -***
  17          
  18          #include <stdio.h>
  19          #include "N76E003.h"
  20          #include "Define.h"
  21          #include "Common.h"
  22          #include "Delay.h"
  23          #include "SFR_Macro.h"
  24          #include "Function_define.h"
  25          
  26          //********************************************************************************************************
             -***
  27          //  N76E885-series I2C slave mode demo code, the Slave address = 0xA4
  28          //
  29          //   ____________            _____________ 
  30          //  |            |   SDA    |             |
  31          //  |            |<-------->|             |
  32          //  |            |          |             |
  33          //  |N76E003(M) |          | N76E003(S) |
  34          //  |(I2C_Master)|          | (I2C_Slave) |
  35          //  |            |   SCL    |             |
  36          //  |            |--------->|             |
  37          //  |____________|          |_____________|
  38          //
  39          //  The protocol of I2C is same the "24LC64"
  40          //********************************************************************************************************
             -***
  41          
  42          
  43          #define I2C_CLOCK               13
C51 COMPILER V9.52.0.0   I2C_S                                                             08/31/2016 16:14:05 PAGE 2   

  44          #define EEPROM_SLA              0xA4
  45          
  46          
  47          UINT8 data_received[34], data_num = 0;
  48          
  49          //========================================================================================================
  50          void I2C_ISR(void) interrupt 6
  51          {
  52   1          switch (I2STAT)
  53   1          {
  54   2              case 0x00:
  55   2                  STO = 1;
  56   2                  break;
  57   2      
  58   2              case 0x60:
  59   2                  AA = 1;
  60   2                  //P3 = 0x60;
  61   2                  break;
  62   2              
  63   2              case 0x68:
  64   2                  P02 = 0;
  65   2                  while(1);
  66   2                  break;
  67   2      
  68   2              case 0x80:
  69   2                  //P3 = 0x80;
  70   2                  data_received[data_num] = I2DAT;
  71   2                  data_num++;
  72   2      
  73   2                  if (data_num == 34)
  74   2                      AA = 0;
  75   2                  else
  76   2                      AA = 1;
  77   2                  break;
  78   2      
  79   2              case 0x88:
  80   2                  //P3 = 0x88;
  81   2                  data_received[data_num] = I2DAT;
  82   2                  data_num = 0;
  83   2                  AA = 1;
  84   2                  break;
  85   2      
  86   2              case 0xA0:
  87   2                  //P3 = 0xA0;
  88   2                  AA = 1;
  89   2                  break;
  90   2      
  91   2              case 0xA8:
  92   2                  //P3 = 0xA0;
  93   2                  I2DAT = data_received[data_num];
  94   2                  data_num++;
  95   2                  AA = 1;
  96   2                  break;
  97   2              
  98   2              case 0xB8:
  99   2                  //P3 = 0xB8;
 100   2                  I2DAT = data_received[data_num];
 101   2                  data_num++;
 102   2                  AA = 1;
 103   2                  break;
 104   2      
 105   2              case 0xC0:
C51 COMPILER V9.52.0.0   I2C_S                                                             08/31/2016 16:14:05 PAGE 3   

 106   2                  AA = 1;
 107   2                  break; 
 108   2      
 109   2              case 0xC8:
 110   2                  //P3 = 0xC8;
 111   2                  AA = 1;
 112   2                  break;        
 113   2          }
 114   1      
 115   1          SI = 0;
 116   1          while(STO);
 117   1      }
 118          
 119          //========================================================================================================
 120          void Init_I2C(void)
 121          {
 122   1          P13_Quasi_Mode;                         //set SCL (P13) is Quasi mode
 123   1          P14_Quasi_Mode;                         //set SDA (P14) is Quasi mode
 124   1          
 125   1          SDA = 1;                                //set SDA and SCL pins high
 126   1          SCL = 1;
 127   1          
 128   1          set_P0SR_6;                             //set SCL (P06) is  Schmitt triggered input select.
 129   1          
 130   1          set_EI2C;                               //enable I2C interrupt by setting IE1 bit 0
 131   1          set_EA;
 132   1      
 133   1          I2ADDR = EEPROM_SLA;                    //define own slave address
 134   1          set_I2CEN;                              //enable I2C circuit
 135   1          set_AA;
 136   1      }
 137          
 138          //========================================================================================================
 139          void main(void)
 140          {
 141   1      
 142   1          Set_All_GPIO_Quasi_Mode;
 143   1          
 144   1          /* Initial I2C function */
 145   1          Init_I2C();                                 //initial I2C circuit
 146   1      
 147   1          while (1);
 148   1      /* =================== */
 149   1      }
 150          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    185    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
