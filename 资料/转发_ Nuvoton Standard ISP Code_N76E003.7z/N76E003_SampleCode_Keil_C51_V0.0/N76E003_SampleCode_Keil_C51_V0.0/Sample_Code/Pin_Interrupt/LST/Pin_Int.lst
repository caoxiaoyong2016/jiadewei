C51 COMPILER V9.52.0.0   PIN_INT                                                           09/05/2016 15:01:32 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE PIN_INT
OBJECT MODULE PLACED IN .\Output\Pin_Int.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Code\Pin_Int.C BROWSE INCDIR(..\..\Include) DEFINE(FOSC_160000) DEBUG OBJEC
                    -TEXTEND PRINT(.\LST\Pin_Int.lst) TABS(2) OBJECT(.\Output\Pin_Int.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2015 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/21/2016
  12          //********************************************************************************************************
             -***
  13          
  14          //********************************************************************************************************
             -***
  15          //  File Function: N76E003 I/O Interrupt demo code
  16          //********************************************************************************************************
             -***
  17          
  18          #include <stdio.h>
  19          #include "N76E003.h"
  20          #include "Define.h"
  21          #include "SFR_Macro.h"
  22          #include "Common.h"
  23          #include "Delay.h"
  24          #include "Function_define.h"
  25          
  26          #if 0
              //Following setting in Function_define.h
              
              ///****************************************************************************
              //   Enable INT port 0~3
              //***************************************************************************/
              //#define   Enable_INT_Port0          PICON &= 0xFB;
              //#define   Enable_INT_Port1          PICON |= 0x01;
              //#define   Enable_INT_Port2          PICON |= 0x02;
              //#define   Enable_INT_Port3          PICON |= 0x03;
              ///*****************************************************************************
              // Enable each bit low level trig mode
              //*****************************************************************************/
              //#define   Enable_BIT7_LowLevel_Trig     PICON&=0x7F;PINEN|=0x80;PIPEN&=0x7F
              //#define   Enable_BIT6_LowLevel_Trig     PICON&=0x7F;PINEN|=0x40;PIPEN&=0xBF
              //#define   Enable_BIT5_LowLevel_Trig     PICON&=0xBF;PINEN|=0x20;PIPEN&=0xDF
              //#define   Enable_BIT4_LowLevel_Trig     PICON&=0xBF;PINEN|=0x10;PIPEN&=0xEF
              //#define   Enable_BIT3_LowLevel_Trig     PICON&=0xDF;PINEN|=0x08;PIPEN&=0xF7
              //#define   Enable_BIT2_LowLevel_Trig     PICON&=0xEF;PINEN|=0x04;PIPEN&=0xFB
              //#define   Enable_BIT1_LowLevel_Trig     PICON&=0xF7;PINEN|=0x02;PIPEN&=0xFD
C51 COMPILER V9.52.0.0   PIN_INT                                                           09/05/2016 15:01:32 PAGE 2   

              //#define   Enable_BIT0_LowLevel_Trig     PICON&=0xFD;PINEN|=0x01;PIPEN&=0xFE
              ///*****************************************************************************
              // Enable each bit high level trig mode
              //*****************************************************************************/
              //#define   Enable_BIT7_HighLevel_Trig      PICON&=0x7F;PINEN&=0x7F;PIPEN|=0x80
              //#define   Enable_BIT6_HighLevel_Trig      PICON&=0x7F;PINEN&=0xBF;PIPEN|=0x40
              //#define   Enable_BIT5_HighLevel_Trig      PICON&=0xBF;PINEN&=0xDF;PIPEN|=0x20
              //#define   Enable_BIT4_HighLevel_Trig      PICON&=0xBF;PINEN&=0xEF;PIPEN|=0x10
              //#define   Enable_BIT3_HighLevel_Trig      PICON&=0xDF;PINEN&=0xF7;PIPEN|=0x08
              //#define   Enable_BIT2_HighLevel_Trig      PICON&=0xEF;PINEN&=0xFB;PIPEN|=0x04
              //#define   Enable_BIT1_HighLevel_Trig      PICON&=0xF7;PINEN&=0xFD;PIPEN|=0x02
              //#define   Enable_BIT0_HighLevel_Trig      PICON&=0xFD;PINEN&=0xFE;PIPEN|=0x01
              ///*****************************************************************************
              // Enable each bit falling edge trig mode
              //*****************************************************************************/
              //#define   Enable_BIT7_FallEdge_Trig     PICON|=0x80;PINEN|=0x80;PIPEN&=0x7F
              //#define   Enable_BIT6_FallEdge_Trig     PICON|=0x80;PINEN|=0x40;PIPEN&=0xBF
              //#define   Enable_BIT5_FallEdge_Trig     PICON|=0x40;PINEN|=0x20;PIPEN&=0xDF
              //#define   Enable_BIT4_FallEdge_Trig     PICON|=0x40;PINEN|=0x10;PIPEN&=0xEF
              //#define   Enable_BIT3_FallEdge_Trig     PICON|=0x20;PINEN|=0x08;PIPEN&=0xF7
              //#define   Enable_BIT2_FallEdge_Trig     PICON|=0x10;PINEN|=0x04;PIPEN&=0xFB
              //#define   Enable_BIT1_FallEdge_Trig     PICON|=0x08;PINEN|=0x02;PIPEN&=0xFD
              //#define   Enable_BIT0_FallEdge_Trig     PICON|=0x04;PINEN|=0x01;PIPEN&=0xFE
              ///*****************************************************************************
              // Enable each bit rasing edge trig mode
              //*****************************************************************************/
              //#define   Enable_BIT7_RasingEdge_Trig     PICON|=0x80;PINEN&=0x7F;PIPEN|=0x80
              //#define   Enable_BIT6_RasingEdge_Trig     PICON|=0x80;PINEN&=0xBF;PIPEN|=0x40
              //#define   Enable_BIT5_RasingEdge_Trig     PICON|=0x40;PINEN&=0xDF;PIPEN|=0x20
              //#define   Enable_BIT4_RasingEdge_Trig     PICON|=0x40;PINEN&=0xEF;PIPEN|=0x10
              //#define   Enable_BIT3_RasingEdge_Trig     PICON|=0x20;PINEN&=0xF7;PIPEN|=0x08
              //#define   Enable_BIT2_RasingEdge_Trig     PICON|=0x10;PINEN&=0xFB;PIPEN|=0x04
              //#define   Enable_BIT1_RasingEdge_Trig     PICON|=0x08;PINEN|=0xFD;PIPEN&=0x02
              //#define   Enable_BIT0_RasingEdge_Trig     PICON|=0x04;PINEN|=0xFE;PIPEN&=0x01
              #endif
  81          
  82          /******************************************************************************
  83           * FUNCTION_PURPOSE: I/O Pin interrupt Service Routine
  84           ******************************************************************************/
  85          void PinInterrupt_ISR (void) interrupt 7
  86          {
  87   1          PIF = 0x00;                             //clear interrupt flag
  88   1            clr_GPIO1;
  89   1            Timer1_Delay1ms(100);
  90   1            set_GPIO1;
  91   1            Timer1_Delay1ms(100);
  92   1            clr_GPIO1;
  93   1            Timer1_Delay1ms(100);
  94   1            set_GPIO1;
  95   1            Timer1_Delay1ms(100);    
  96   1      
  97   1      }
  98          /******************************************************************************
  99          The main C function.  Program execution starts
 100          here after stack initialization.
 101          ******************************************************************************/
 102          void main (void) 
 103          {
 104   1       
 105   1          Set_All_GPIO_Quasi_Mode;
 106   1      //----------------------------------------------------
 107   1      //  P0.5 set as highlevel trig pin interrupt function
C51 COMPILER V9.52.0.0   PIN_INT                                                           09/05/2016 15:01:32 PAGE 3   

 108   1      //  Keep P0.5 connect to VDD LED will tickle
 109   1      //  otherwise, MCU into power down mode.
 110   1      //----------------------------------------------------
 111   1          Enable_INT_Port0;
 112   1          Enable_BIT5_HighLevel_Trig;
 113   1          P05 = 0;
 114   1      
 115   1          set_EPI;              // Enable pin interrupt 
 116   1          set_EA;               // global enable bit
 117   1          
 118   1          while(1)
 119   1          {
 120   2              set_PD;           //Enter Power Down wait 
 121   2          }
 122   1      }
 123          
 124          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    148    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
